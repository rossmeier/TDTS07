<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
broadcast chan NS;
broadcast chan WE;</declaration><template><name x="5" y="5">LightNS</name><declaration>// Place local declarations here.
bool sensor = true;</declaration><location id="id0" x="40" y="64"><name x="48" y="80">Wait</name></location><location id="id1" x="-112" y="48"><name x="-136" y="16">Green</name></location><location id="id2" x="16" y="-80"><name x="6" y="-110">Red</name></location><init ref="id2"/><transition><source ref="id1"/><target ref="id2"/><label kind="synchronisation" x="-192" y="-32">WE?</label><nail x="-168" y="8"/><nail x="-88" y="-80"/></transition><transition><source ref="id1"/><target ref="id2"/><label kind="guard" x="-108" y="-46">sensor==0</label></transition><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="-48" y="64">NS?</label></transition><transition><source ref="id2"/><target ref="id0"/><label kind="guard" x="40" y="-32">sensor==1</label></transition></template><template><name>Controller</name><declaration>clock clk;
const int max_wait_time = 10;</declaration><location id="id3" x="-144" y="-56"><name x="-152" y="-32">WE_state</name><label kind="invariant" x="-120" y="-56">clk &lt;= max_wait_time</label></location><location id="id4" x="-152" y="-192"><name x="-162" y="-222">NS_state</name><label kind="invariant" x="-128" y="-192">clk &lt;= max_wait_time</label></location><init ref="id4"/><transition><source ref="id3"/><target ref="id4"/><label kind="guard" x="-344" y="-136">clk == max_wait_time</label><label kind="synchronisation" x="-344" y="-168">NS!</label><label kind="assignment" x="-344" y="-152">clk=0</label><nail x="-184" y="-125"/></transition><transition><source ref="id4"/><target ref="id3"/><label kind="guard" x="-88" y="-152">clk == max_wait_time</label><label kind="synchronisation" x="-88" y="-120">WE!</label><label kind="assignment" x="-88" y="-136">clk=0</label><nail x="-104" y="-120"/></transition></template><template><name>LightWE</name><declaration>bool sensor = true;</declaration><location id="id5" x="-104" y="72"><name x="-114" y="42">Green</name></location><location id="id6" x="56" y="64"><name x="46" y="34">Wait</name></location><location id="id7" x="-16" y="-88"><name x="-26" y="-118">Red</name></location><init ref="id7"/><transition><source ref="id5"/><target ref="id7"/><label kind="synchronisation" x="-176" y="-56">NS?</label><nail x="-168" y="0"/><nail x="-128" y="-80"/></transition><transition><source ref="id5"/><target ref="id7"/><label kind="guard" x="-144" y="-32">sensor==0</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-32" y="72">WE?</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="guard" x="32" y="-40">sensor==1</label></transition></template><system>// Place template instantiations here.
cont = Controller();
LightN = LightNS();
LightS = LightNS();
LightW = LightWE();
LightE = LightWE();

// List one or more processes to be composed into a system.
system cont, LightN, LightW, LightS, LightE;</system></nta>